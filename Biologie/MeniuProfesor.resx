<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAtAAAAHgCAYAAACMxVqsAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAyiSURBVHhe7d0h
        sqRFFITRt9fGY5uIxiLYAr2UaUObWQhuHDjMI+rXIyZTkkccVwv4zK38+Pfvr58AAMCPEdAAABAQ0AAA
        EBDQAAAQENAAABAQ0AAAEBDQAAAQENAAABAQ0AAAEBDQAAAQENAAABAQ0AAAEBDQAAAQENAAABAQ0AAA
        EBDQAAAQENAAABAQ0AAAEBDQAAAQENAAABAQ0AAAEBDQAAAQENAAABAQ0AAAEBDQAAAQENAAABAQ0AAA
        EBDQAAAQENAAABAQ0AAAEBDQAAAQENAAABAQ0AAAEBDQAAAQENAAABAQ0AAAEBDQAAAQENAAABAQ0AAA
        EBDQAAAQENAAABAQ0AAAEBDQAAAQENAAABAQ0AAAEBDQAAAQENAAABAQ0AAAEBDQAAAQENAAABAQ0AAA
        EBDQAAAQENAAABAQ0AAAEBDQAAAQENAAABAQ0AAAEBDQAAAQENAAABAQ0AAAEBDQAAAQENAAABAQ0AAA
        EBDQAAAQENAAABAQ0AAAEBDQAAAQENAAABAQ0AAAEBDQAAAQENAAABAQ0AAAEBDQAAAQENAAABAQ0AAA
        EBDQAAAQENAAABAQ0AAAEBDQAAAQENAAABAQ0AAAEBDQAAAQENAAABAQ0AAAEBDQAAAQENAAABAQ0AAA
        EBDQQOXPL398/vrLT5d/vr2/+wYA/o8ENFD5/befPz8+Pi7f/vry3TcA8H8koIGKgAZglYAGKgIagFUC
        GqgIaABWCWig8n49HRECMElAAwBAQEADAEBAQAMAQEBAAwBAQEADlbNE+LjfLo4IAVgioIGKb+wAWCWg
        gYqABmCVgAYqAhqAVQIaqAhoAFYJaKByjggtEQKwSEADAEBAQAMAQEBAAwBAQEADAEBAQAMVS4QArBLQ
        QMU3dgCsEtBARUADsEpAAxUBDcAqAQ1UBDQAqwQ0UHm/npYIAZgkoAEAICCgAQAgIKABACAgoAEAICCg
        gcpZInRECMAiAQ1UfGMHwCoBDVQENACrBDRQEdAArBLQQEVAA7BKQAMVS4QArBLQAAAQENAAABAQ0AAA
        EBDQAAAQENBA5SwRPu63iyNCAJYIaKDiGzsAVglooCKgAVgloIGKgAZglYAGKgIagFUCGqicI0JLhAAs
        EtAAABAQ0AAAEBDQAAAQENAAABAQ0EDFEiEAqwQ0UPGNHQCrBDRQEdAArBLQQEVAA7BKQAMVAQ3AKgEN
        VN6vpyVCACYJaAAACAhoAAAICGgAAAgIaAAACAhooHKWCB0RArBIQAMV39gBsEpAAxUBDcAqAQ1UBDQA
        qwQ0UBHQAKwS0EDFEiEAqwQ0AAAEBDQAAAQENAAABAQ0AAAEBDRQOUuEj/vt4ogQgCUCGqj4xg6AVQIa
        qAhoAFYJaKAioAFYJaCBioAGYJWABirniNASIQCLBDQAAAQENAAABAQ0AAAEBDQAAAQENFCxRAjAKgEN
        VHxjB8AqAQ1UBDQAqwQ0UBHQAKwS0EBFQAOwSkADlffraYkQgEkCGgAAAgIaAAACAhoAAAICGgAAAgIa
        qJwlQkeEACwS0EDFN3YArBLQQEVAA7BKQAMVAQ3AKgENVAQ0AKsENFCxRAjAKgENAAABAQ0AAAEBDQAA
        AQENAAABAQ1UzhLh4367OCIEYImABiq+sQNglYAGKgIagFUCGqgIaABWCWigIqABWCWggco5IrRECMAi
        AQ0AAAEBDQAAAQENAAABAQ0AAAEBDVQsEQKwSkADFd/YAbBKQAMVAQ3AKgENVAQ0AKsENFAR0ACsEtBA
        5f16WiIEYJKABgCAgIAGAICAgAYAgICABgCAgIAGKmeJ0BEhAIsENFDxjR0AqwQ0UBHQAKwS0EBFQAOw
        SkADFQENwCoBDVQsEQKwSkADAEBAQAMAQEBAAwBAQEADAEBAQAOVs0T4uN8ujggBWCKggYpv7ABYJaCB
        ioAGYJWABioCGoBVAhqoCGgAVglooHKOCC0RArBIQAMAQEBAAwBAQEADAEBAQAMAQEBAAxVLhACsEtBA
        xTd2AKwS0EBFQAOwSkADFQENwCoBDVQENACrBDRQeb+elggBmCSgAQAgIKABACAgoAEAICCgAQAgIKCB
        ylkidEQIwCIBDVR8YwfAKgENVAQ0AKsENFAR0ACsEtBARUADsEpAAxVLhACsEtAAABAQ0AAAEBDQAAAQ
        ENAAABAQ0EDlLBE+7reLI0IAlghooOIbOwBWCWigIqABWCWggYqABmCVgAYqAhqAVQIaqJwjQkuEACwS
        0AAAEBDQAAAQENAAABAQ0AAAEBDQQMUSIQCrBDRQ8Y0dAKsENFAR0ACsEtBARUADsEpAAxUBDcAqAQ1U
        3q+nJUIAJgloAAAICGgAAAgIaAAACAhoAAAICGigcpYIHRECsEhAAxXf2AGwSkADFQENwCoBDVQENACr
        BDRQEdAArBLQQMUSIQCrBDQAAAQENAAABAQ0AAAEBDQAAAQENFA5S4SP++3iiBCAJQIaqPjGDoBVAhqo
        CGgAVglooCKgAVgloIGKgAZglYAGKueI0BIhAIsENAAABAQ0AAAEBDQAAAQENAAABAQ0ULFECMAqAQ1U
        fGMHwCoBDVQENACrBDRQEdAArBLQQEVAA7BKQAOV9+tpiRCASQIaAAACAhoAAAICGgAAAgIaAAACAhqo
        nCVCR4QALBLQQMU3dgCsEtBARUADsEpAAxUBDcAqAQ1UBDQAqwQ0ULFECMAqAQ0AAAEBDQAAAQENAAAB
        AQ0AAAEBDVTOEuHjfrs4IgRgiYAGKr6xA2CVgAYqAhqAVQIaqAhoAFYJaKAioAFYJaCByjkitEQIwCIB
        DQAAAQENAAABAQ0AAAEBDQAAAQENVCwRArBKQAMV39gBsEpAAxUBDcAqAQ1UBDQAqwQ0UBHQAKwS0EDl
        /XpaIgRgkoAGAICAgAYAgICABgCAgIAGAICAgAYqZ4nQESEAiwQ0UPGNHQCrBDRQEdAArBLQQEVAA7BK
        QAMVAQ3AKgENVCwRArBKQAMAQEBAAwBAQEADAEBAQAMAQEBAA5WzRPi43y6OCAFYIqCBim/sAFgloIGK
        gAZglYAGKgIagFUCGqgIaABWCWigco4ILRECsEhAAwBAQEADAEBAQAMAQEBAAwBAQEADFUuEAKwS0EDF
        N3YArBLQQEVAA7BKQAMVAQ3AKgENVAQ0AKsENFB5v56WCAGYJKABACAgoAEAICCgAQAgIKABACAgoIHK
        WSJ0RAjAIgENVHxjB8AqAQ1UBDQAqwQ0UBHQAKwS0EBFQAOwSkADFUuEAKwS0AAAEBDQAAAQENAAABAQ
        0AAAEBDQQOUsET7ut4sjQgCWCGig4hs7AFYJaKAioAFYJaCBioAGYJWABioCGoBVAhqonCNCS4QALBLQ
        AAAQENAAABAQ0AAAEBDQAAAQENBAxRIhAKsENFDxjR0AqwQ0UBHQAKwS0EBFQAOwSkADFQENwCoBDVTe
        r6clQgAmCWgAAAgIaAAACAhoAAAICGgAAAgIaKBylggdEQKwSEADFd/YAbBKQAMVAQ3AKgENVAQ0AKsE
        NFAR0ACsEtBAxRIhAKsENAAABAQ0AAAEBDQAAAQENAAABAQ0UDlLhI/77eKIEIAlAhqo+MYOgFUCGqgI
        aABWCWigIqABWCWggYqABmCVgAYq54jQEiEAiwQ0AAAEBDQAAAQENAAABAQ0AAAEBDRQsUQIwCoBDVR8
        YwfAKgENVAQ0AKsENFAR0ACsEtBARUADsEpAA5X362mJEIBJAhoAAAICGgAAAgIaAAACAhoAAAICGqic
        JUJHhAAsEtBAxTd2AKwS0EBFQAOwSkADFQENwCoBDVQENACrBDRQsUQIwCoBDQAAAQENAAABAQ0AAAEB
        DQAAAQENVM4S4eN+uzgiBGCJgAYqvrEDYJWABioCGoBVAhqoCGgAVglooCKgAVgloIHKOSK0RAjAIgEN
        AAABAQ0AAAEBDQAAAQENAAABAQ1ULBECsEpAAxXf2AGwSkADFQENwCoBDVQENACrBDRQEdAArBLQQOX9
        eloiBGCSgAYAgICABgCAgIAGAICAgAYAgICABipnidARIQCLBDRQ8Y0dAKsENFAR0ACsEtBARUADsEpA
        AxUBDcAqAQ1ULBECsEpAAwBAQEADAEBAQAMAQEBAAwBAQEADlbNE+LjfLo4IAVgioIGKb+wAWCWgAQAg
        IKABACAgoAEAICCgAQAgIKABACAgoAEAICCgAQAgIKABACAgoAEAICCgAQAgIKABACAgoAEAICCgAQAg
        IKABACAgoAEAICCgAQAgIKABACAgoAEAICCgAQAgIKABACAgoAEA4Id9/fwP9MQnJFs9HpoAAAAASUVO
        RK5CYII=
</value>
  </data>
</root>